-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."user"
(
    "Name" character varying(255) NOT NULL,
    "Password" character varying(255) NOT NULL,
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "CreationDate" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "Email" character varying (255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.review
(
    "movieId" integer,
    id integer NOT NULL,
    date date NOT NULL,
    content character varying(6502),
    stars integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public."group"
(
    "groupName" character varying(32) NOT NULL,
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chat
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    content character varying(1002)[] NOT NULL,
    "accId" integer NOT NULL,
    date date NOT NULL,
    "groupId" integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Favourites"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "movieId" integer NOT NULL,
    date date NOT NULL,
    "movieName" character varying(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Role"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "groupId" integer NOT NULL,
    "userId" integer NOT NULL,
    admin boolean NOT NULL DEFAULT '0',
    "user" boolean NOT NULL DEFAULT '0',
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.review
    ADD FOREIGN KEY (id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chat
    ADD FOREIGN KEY ("groupId")
    REFERENCES public."group" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Favourites"
    ADD FOREIGN KEY (id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Role"
    ADD FOREIGN KEY ("groupId")
    REFERENCES public."group" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Role"
    ADD FOREIGN KEY ("userId")
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;