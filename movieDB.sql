-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."user"
(
    "Name" character varying(255) NOT NULL,
    "Password" character varying(255) NOT NULL,
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "CreationDate" date NOT NULL,
    "Email" character varying NOT NULL,
    PRIMARY KEY ("accID")
);

CREATE TABLE IF NOT EXISTS public.review
(
    "movieId" integer,
    id integer NOT NULL,
    date date NOT NULL,
    content character varying(6502),
    stars integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public."group"
(
    "groupName" character varying(32) NOT NULL,
    admin character varying(255) NOT NULL,
    "groupId" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    PRIMARY KEY ("groupId")
);

CREATE TABLE IF NOT EXISTS public.user_group
(
    "USER_id" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "Group_groupId" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    verification boolean NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS public.list
(
    name character varying(32) NOT NULL,
    "listId" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    PRIMARY KEY ("listId")
);

CREATE TABLE IF NOT EXISTS public.user_list
(
    user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "list_listId" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 )
);

CREATE TABLE IF NOT EXISTS public."moviesOfTheList"
(
    "movieId" integer NOT NULL,
    date date NOT NULL,
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    "listId" integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chat
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 ),
    content character varying(1002)[] NOT NULL,
    "accId" integer NOT NULL,
    date date NOT NULL,
    "groupId" integer NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.review
    ADD FOREIGN KEY (id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_group
    ADD FOREIGN KEY ("USER_id")
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_group
    ADD FOREIGN KEY ("Group_groupId")
    REFERENCES public."group" ("groupId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_list
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_list
    ADD FOREIGN KEY ("list_listId")
    REFERENCES public.list ("listId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."moviesOfTheList"
    ADD FOREIGN KEY ("listId")
    REFERENCES public.list ("listId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chat
    ADD FOREIGN KEY ("groupId")
    REFERENCES public."group" ("groupId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;